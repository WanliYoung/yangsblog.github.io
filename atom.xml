<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yangyy&#39;s Life</title>
  
  <subtitle>这里是杨万里的生活</subtitle>
  <link href="http://yangyy.top/atom.xml" rel="self"/>
  
  <link href="http://yangyy.top/"/>
  <updated>2022-07-21T15:16:51.375Z</updated>
  <id>http://yangyy.top/</id>
  
  <author>
    <name>yangyy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2022-7-21日记</title>
    <link href="http://yangyy.top/2022/07/21/2022-7-21%E6%97%A5%E8%AE%B0/"/>
    <id>http://yangyy.top/2022/07/21/2022-7-21%E6%97%A5%E8%AE%B0/</id>
    <published>2022-07-21T14:57:38.000Z</published>
    <updated>2022-07-21T15:16:51.375Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ea4d881685095d93bdcdf01c651cae560cac12803d1995489fd4210efdbd6b65">d361d61c52df07d9e0bf0afb5b4e2d2e89dd1552fc6e6d5104e5bb1dee2b1ecc244443458c3942582f194fa2a10d88028852d12b3a712bcbe494dd7c0032a43a4ed24222d87e57cfaf346cfc505b4ceb7c3e4d6b095713c48da9ab5ef261adc385cc518d7a9979df23b16d77344f2d16152889b1f646ea3b8d5f02c4ac7dd06b11ba2d3d89f00e90cb0c824f65623bd0f8d9f530348851dd5a5fbd2647f3a86c253be922ed73cb4621d6fbda6a6650fedccf19fd7605d1d41d05c01e790e326ec4230f59f242530bb9686b6cc23b0216e5e60178c2b4659519bdea307bec058c8e4f8352600cb3cc0738285817026aabcbef0ee689d354007441df5b2383b6a21ce7ec763e90f9d2c506212ef813a96f53c38572ace4be99ed29159d8d90a34b0c7844c4dcba2f2d4c6696e440496b6c051842fa4856aa009f2176a1185cc59488410e30cc18040c27468152786a31929df621b5b99a7ed0833c6faa6f746817fe5b70c64bd27859a58263b98bcce1ce8ba5e5d021c0270e645de1ab5910fa101b326e5c1b998f34fcb8107cb098052d9e3a097d3ce6c042b7ef356169b288e102ef55bb40b9e3545e8b512396e9dc7facf7e04f8e0955a55a4e34651de40f2e050f4a71d61b2cde41c569f55ebe09beb4559047dc0bcbc4c7dace706b53d6b56462c7beefdca3056b72c7be63570b30848572c3886c9d42444685d55999a5c8b0666b0acbb89ae8fbefb10e11f90d1d82978ab805b62b7043126d14285ffc0293eddaeba43b1825b2416ec5550b7d91b82688d22ed301f38e8b29a5636cb05ccf4fb1578abe5352251bcaa88e85c935427c52c722f35e0ef0434c1558a6cd380d67715d5b401866e44efa0e1d75c70552d1f06548c03c279eae2d39b4a84e888e14dd6419372661d8d25c89046be05a86fad1acf12732576570ac2905c0941098dac22018e1653c49590ec6c9cba5ab3339cb7522ffad9c19e502514fb87a3d22b0799efb99f400f2efa2583926d40fc8ae47f493d4f0fa11c8bf3120fc3c9aca2243f94086c53feae7a9ae5ccf2a3bb0706de1b4e490a17647e495ed415138cfa6c9b71e27d699424b9241bc4577fa2fce9688aefbf558712c8c9d8003cc640c8b041407deaf944a7d92a7326a377a9bd9bd1e0c273ed4c52a65429b5596a364414e1240e6d6b871edd07b9b8a8081816ded76e8c5ed8e5aabe441c50f6382cc3b136dd03cbdcaf54cc8c53619a39b3639a33c7d452f51dd7567e0b3f55689624594b34e7555c40a9a6e4cd1ff75c9232fdf07f5de9872c31560fe67a92572143496506767d3b0f4d42283b3ada3e6b3b2959fae1b49493a08fda94f85eca22b19bd5027a1c4ae796bfda16b6a8a537c075f7968b3c19872dd0dbb97fbfec4fa38882a169e141eb950ab6a905c5e1ac08e8d7838ac3c39d3448bb19e40de7c3d5923975d2886dd3150aa2daea5e21a8bc9e9b8cdb72ca27cfee1210825ba534bcd9dc2e8fec4611f23375b020330806e48a14a114c88f1b8b853718eafb5b4c60bb026d429b6f86aec80e96d4b2861332b6f18d7f8035a7b2363439dc71ac7749aba0b9950ee101de7e1f5579f062ee08a2d3f3fe08607988c31de4a4e56e06d3baf43aa67c19dc54ccbe07237a72eb404f62cdc264cb9eb5e02f1d85d0bbdf2a7fb81c4d4ccfbf9cbf626260b137711d6793d29c253376da6bf68bbdab69329daf784f692247b4f39de1dbcf303185db4755f7042b949d6983b3a5964edf6ecc7dc3ab9ca54c8f764b460dbf39d59b5c315f63d73a7e71e150b1302bb2e44577250857248cca845c7ea17f3c8f53545b60a348462d27086fb71f09fe9579cd5a51f07b34eb5e77cb131bc3145aa5c7979059577d8cd031860338c4e6985b11a2cbed6f8da93902de93c974d7239a0863be65d7870136a32bb760871b41c854fd51b232caa881ea0bede229f384c058f4b256b3731ba24d9a8d0759800c1b7578c653b958fb7250fbc5d9f18f1fe9e3a69c2d7fc3622eb4e9917810cc0f780206fe50a49c505f03f16f97e483ff9e212716fe1252834f836f078095128434160bab149c793b3ef68652fdb750aff52e806b0e1b1c6c9e4da1bc65037a453acd6e5fa522e45ad36012f1d9694551acc53ffd53283245adac14aff44ae56af378f6febe0c82245ab9f78185dc450139fd523ac9281ace63780aa4dd03a4ec54b860ad51147e7302d95ba8b51eb42a5f50d4bec0f6f80641c8f2eacc0faed4dfa0705e87f6edb7130ab19059d141a8d77f510e401acab9d9ba28ac06e68f2c7e2de022bed7f029edf1550d041592fffbe333d9aac756fe3061c02b56c62145a7299e4f2b0240aa61c9ae2348ffb3a599cda0d9d951bf2c1e1993508d8928a7df04df7aba0d50ceec51d5a281896c8488ee031ab74195c032315ae2f0d1a693d9b6f4b26219911327d34d5c4a582c93d3c20006c66a1f378ba02fd7bc0c9481d5ec93c55bf5fe0946bf255405abd2dd3a295160bf1afb7366fb7c7bf75aa2329e6b9f11fd6ef805b2a5c6c422406bc7bd6b5516a0c06dfbc6d42cc8a1fcb9d8668df5ca0a7802502b8295b7d169619a86f780856189901d00e42dc566cc35a022ef7b14bea2d90f650ea4aeb0d748ab12e31cf7dd899bf61a2f76cc54702a605a225bd55a0258d6c29d6d82ea9f450c40aa800d84cad081f2c59d027b5020597c9cc94669c15106e60a7fd698baa6f3741b17e4973c3dd514e45cf5efa7b98e345c3a1d74ccdbb2c3e7e7c937c2d9d288073e3cfd1f26533b88122fa97940052ba4cda3882cef9d397587882822c8b4e54886383f7b176b0e50cfa3d773df74d78bce1d4f2a7da9102e2a386767241c04b50b69d5521c7b7e845d482d62142a1fe1e45fa25cde8199688102802f294bd8e0813aabbbb1cd02617b5c45c9a148e8b9e9e87998b921df54a68ff0c213d15cd34a7116023e5bfd07ea584435cf8d0125a71467014e807ffac99b0c4beb7924952a9b13ea0d43ced13fa4fce8523f47cf5791d2920059364fc1606c820dd0dd4c7c6dbe8097807b0c3c977b4e1547079e1fae6cead8317238324350814040494acc2258a309ebc892b3d931f65577490f8536878928184a8c9f6756324297ea6121020384529fdfa65c93259f4513e08</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是我的日记，不能给你看哦，不过你要是猜对了密码，那就看叭~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">不好意思哦，这是一篇加密文章，逛逛博客的其他文章叭。</summary>
    
    
    
    <category term="生活的点点滴滴" scheme="http://yangyy.top/categories/%E7%94%9F%E6%B4%BB%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>2022-7-20日记</title>
    <link href="http://yangyy.top/2022/07/20/2022-7-20%E6%97%A5%E8%AE%B0/"/>
    <id>http://yangyy.top/2022/07/20/2022-7-20%E6%97%A5%E8%AE%B0/</id>
    <published>2022-07-20T15:46:07.000Z</published>
    <updated>2022-07-20T15:57:11.128Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="51e6216a9a3adcc96530faf6743947453bb88906b5822a2b80f85e0a1ab0b809">d361d61c52df07d9e0bf0afb5b4e2d2e89dd1552fc6e6d5104e5bb1dee2b1eccd40ee6aa17b6adfd50665638570e5b1c4bfcf772125c8cde65b5975dd961f9803fb42f9ca3a47d1ca2fbe7f57a0e8301df44ec491063c8b69635079c99580c1dc87723b899150daafab25ae41dbf74478c3d1ae0a2e7b0cef2b840ae461c07cb0ef56ca80f8c899ba0f452fa92bad767d247d358ef68b6fbe3460c200ca4af5ba1190ca8e738816a164c131b03e7db5fe1389fda46888f7e8860a728f2ce19060dd8d72fa4e9d707909a22921276284724efd7cb221418114119b73abc485f19e8655451350dc87f51e7712521daec80195710ec465edb87d6bf402b1d1598b05b266a1457b6d234f4d86cb8df029db0e40a606f6cfd50b30d79d1eb9dce601989274e969f0e1c6b26d6aa49a7871b3c9bca83e87a6fba9a3fd4b5161799032d6370cd34a9087aa645c0101c3e11e5e940343b1061e5029e4788536d1a7966b3525dbde99a0ff62eb0999d225c125a7d3d9c9e6cc332a8bf58bf4307aa54184da0f1f95efa87046ff1685d78d8bef4cd018fde518e6f6d3c2f4b2a65371a93a7124305efadfe29a30db9d75b9a5837010b2882e2b49c8e60d253aea381bbf07e8881527f90eeee2fb8908f6a7285f6ab3132f1baeadd04e0bced2bbd5c9b1d303ce06343168683f402b1f266b4005624f9a651884a03087bee3f8a1235fb94764ea4487667d5f0fa17497d7717cceb68bfe847a81b59200c5b57864642cc369e97c8e2e07dfb5a3572c44a59b639b1ecf4e34a81d8123477f10e2eda420bb75f8386e6a47d60ed829718843e9c21fbd137d4cdbf74dac47e0de5ae97d8449f9d9e7fea3c86505cb139622f3df6579e7ee8c377ce8b0fe897830fb310b1c6e5260519d5fecb020db40e5b2ead074dcf9d9e2fab5459f504a6baa949b1f4b93f1e172e5f77821e27d12cd52ef92168d8910da1ee425f390ef2f18153a8900e0ca2cf08ca05f678d92d570f396bae928ff2314bec52cc4b64e269f78c87faf15778e9c38a81becd6cb642700f8b65b38df7f840f7e9ea1836190ecc9adafc4284d7798ddbe8bed55cf55d06c65778e079eb051f2734fcbd81ec75f960c6c92be40324e22da658ffa316daeaab82cbd932c9904629e5be226a3e550ea78905c3fb563b55425133ea5b80d7b176e1119ddfdae391be4cf0e3988c8be373a39a2489def726d4ccfdea09ff152120452eb059d48f8d358ada2f842a09ba9fa38944c22d80c297ec65990343491250f368770fda93f8a25c4f59c3786e1bdd7686365a1bb78b7f1df4be9c88110d910b73817d84409dbe7d93df6dc22668000e87863332a3581430d787ecce98e7d50a8cc6b9b8aa272ab6f72f786178e09ae35c3cb5e17cdd2c9628a79e65f639a07fcbc946e1bb996950c7f55c5b03df23872a922c17007d9fdc6c039d5e1e5261858b76d018b83b0abfc304a98cb9cae6ac11efec143d581f646e17b02da8c5d6b441a526c85527c00db52272f2e6b1dfd16c73da38ba2448599519500de22272c08d5ff1674f15539c407a94a25da332972afd8d568d43879376d44a67b7ac91a6be3cb00b9c92d85d0b9c370400dee7c484deb550c3e9252c52d61b94e97c65b3a30792515553cf1a01bf64e9490da82bde9a5138</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是我的日记，不能给你看哦，不过你要是猜对了密码，那就看叭~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">不好意思哦，这是一篇加密文章，逛逛博客的其他文章叭。</summary>
    
    
    
    <category term="生活的点点滴滴" scheme="http://yangyy.top/categories/%E7%94%9F%E6%B4%BB%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>添加代码块一键复制功能</title>
    <link href="http://yangyy.top/2022/07/20/%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%80%E9%94%AE%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/"/>
    <id>http://yangyy.top/2022/07/20/%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%80%E9%94%AE%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/</id>
    <published>2022-07-20T01:35:00.000Z</published>
    <updated>2022-07-20T01:39:16.431Z</updated>
    
    <content type="html"><![CDATA[<p>刚添加了代码块复制功能，进一步实现了博客的开源。</p><p><img src="/2022/07/20/%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%80%E9%94%AE%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.png" alt="image"></p><p>右上角图片即一键复制代码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;刚添加了代码块复制功能，进一步实现了博客的开源。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/07/20/%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%80%E9%94%AE%E5%A4%8D%E5%88%B6%E</summary>
      
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>2022-7-19日记</title>
    <link href="http://yangyy.top/2022/07/19/2022-7-19%E6%97%A5%E8%AE%B0/"/>
    <id>http://yangyy.top/2022/07/19/2022-7-19%E6%97%A5%E8%AE%B0/</id>
    <published>2022-07-19T15:22:07.000Z</published>
    <updated>2022-07-19T15:37:18.595Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1bdee5727b386e0a26125fc405a7fa4596bb3c0ab18343ca276dc07b9e2586c4">d361d61c52df07d9e0bf0afb5b4e2d2e1fcfbde3d99e04359b12aa9419ff0b11904bced5ce3bef80b4ed2df249bd34d6b81b3b49818d099bb6c203302d27a880711b434f07ad1389c8adc8f3400ed6e9c740bceea030eefd4d0aad3ca0712e861eef85060f00dc5b105f231cc2f9e2b8bfbeaafff2774b3d687fa0d54cbfc0a9f4aac45b97d66ba71cff42663019fc64092bf80b643bc98488bfea81d497472475089bdb7c8aee39eb5d6bb64251ae7d0df43e5e33c97edb592e044de455ef2e55d02f3fea5c8514661a59388cd6752906d16201d8122d172ab36a7d1ee7d58c87c674dd2dea554acaaf5a0e93bb730e572db3a117cf06e1b8e530194a94de7442fd94c4439872112e4bf700f24add6aa11dacd886840b72cd88117272c90c60e2cc341a6ed73e47f92655af733f21b34ca387a0fe4f80858fe3632fe8df5955c499882166d9221dc752891f4e706191a0664437017148cfe0ae6d9bc32f971d11f285130e346aed55ddf1903aa19dbee1715aeff8b82644bc004b0056c7bf41dd0ea53ee73fb39ff03246eb1a4b5ae86b1c00882673c8572e9bfd2bcc6cf52f184e687151d4e3a7727d8d07d3d8704fd89bf496ba9fee2bcbdcd9552fd297381cde077bf0937e97ffdbe61d721bf5f304154fc26d76dd95d3f146eebf39ed121c90e2586693ac0749ea28c367a992d60fbaa79dd514b570917eb3355a300f876a215ab70c9165576f2382cccbbedd62d69663e0c5932c56c445a0b68444dc28739da7b5b5e3f15db1126b0993d9db19e07fe1b9e623181e9007719e380d8abb1b1720f01ff706c64828f33efbd42a91de1e44f2b62d2c4e29f8b5fd0830036dfbe952f681ca9de31a7428f844ffce8f113a638da5f524002f6805ceda151c9b2115e8e60e54e7dea9da057685b724699ccd081ab79fb56746bf48a9cde519c5ad4982b6622dc3082911a283dbec16428f624ecfdd9db2cebdcdbac28b7e99ca08679852a79ff9093086bd3254c1c6c791f506ec032ce5d1920fd11abf23728abf50556a87dfcb01a4b5646f253d6dff87f88216515cd1a4c794d6c70b31e1e15ca411dc1277ae67ed67fbfbf44c093efea5c999a2bee6e2206bd5a888c0961f802d669543b0e80791b338c84b4cf5bc7f93dff78edacdafbc5e13152677f0d51d0d20b1501a9d982c1065413d4692f2e4a8b3e6ca5d6442370a24412892188acb6c4592b6709b9bb94a2e5982ff799ff6e3bddaa0beab062e630b47173d5f5b451ecdbf18e1af8363813c7654f4c545989829efc1a1ea02491a21005d3606012a6103728bd4dc2420b6dbf768489adf9e63ae9b6b5842c96bc7da38ffb6b9daadac534dc737fb000e2c3d0afcd39b4e61b98eae92993c226fbc51c3d3ce8139ed8a3d53417d4fb25cc901267645a3055b0aba74f0281ba84816fc19a245cd207a986c720dd18db05587770ca3cd822188062c899d9eaae907d9f35110c3e7aba0115a4eca4f0cc539d0b2cbcc7aa552d177e253f96e76a568411d22edf35a0e810c1daaca32530f29a147f7d943ed6ce802eb42d64a432429a4ce830321660c6fd86671016eb2792db02acc9a2b18515d2f77589ef2db377639907ad3d2ebbc5383ce5298f9095250ca11fe312b6fd1c3ea892dea6425a55399e6fedf25f28dcddde8a8aaa564979322bec51d39e69eb8d89da0300852a24cc4200b8f321584603afdd1d9e6e77d32a417972ece5b34eb3f776fc0cb7afca52b869f3f0e16ad097a4b7cd4bd8602885cc33cc1bf1e99010a3d2887cf181389811b1771f58da069799630c483b165f48dd20cf9c35dd253e417d15d372e7c30f27a4a3f8ccc247d491d7a65d8d14a8bdb408aafc3e239796f44f9a0285a91915422a660a1660d949bf17716d5a0a05b4a55366220a3744609e7d3b983c4d1d7ec5f361d1e70f37a477a294bc8f26b0ec97977f8ea4bf29445b13f6231dbd847ac87df5c0230a5bd46c8160c1e195c6ea651d4bfcd1e4284750ae6aac109b690dc94afa6a58c30e68e2be80254d9ed0806aeb9af0918cf1c97d0b17087c44cf8fc1fc6de8271272140fc5e2b7a7b21e29de11c232c15f869fe36aa9223e10e62f46dafd7540ac569db93f57921986ab2d73422dae920bf9fa7a13b2acbb80ee3760c37686944da26327e5f2ebbacef963c171c1db7a64985ac411ee27aeda9deebe917f74c0577</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是我的日记，不能给你看哦，不过你要是猜对了密码，那就看叭~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">不好意思哦，这是一篇加密文章，逛逛博客的其他文章叭。</summary>
    
    
    
    <category term="生活的点点滴滴" scheme="http://yangyy.top/categories/%E7%94%9F%E6%B4%BB%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>emoji汇总</title>
    <link href="http://yangyy.top/2022/07/19/emoji%E6%B1%87%E6%80%BB/"/>
    <id>http://yangyy.top/2022/07/19/emoji%E6%B1%87%E6%80%BB/</id>
    <published>2022-07-19T02:02:12.000Z</published>
    <updated>2022-07-19T03:17:41.017Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了半天还是失败了，试了网上几乎所有方法，都没能正常渲染出emoji，暂时放弃，如果正在读这篇文章的你知道好的办法，麻烦联系我。</p><p><img src="/2022/07/19/emoji%E6%B1%87%E6%80%BB/i1.png" alt="image"></p><p><img src="/2022/07/19/emoji%E6%B1%87%E6%80%BB/i2.png" alt="image"></p><p><img src="/2022/07/19/emoji%E6%B1%87%E6%80%BB/i3.png" alt="image"></p>]]></content>
    
    
    <summary type="html">记录一下常用的emoji编码。</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>统计阅读次数的瞎折腾&amp;终于成功了</title>
    <link href="http://yangyy.top/2022/07/19/%E7%BB%9F%E8%AE%A1%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%E7%9A%84%E7%9E%8E%E6%8A%98%E8%85%BE-%E7%BB%88%E4%BA%8E%E6%88%90%E5%8A%9F%E4%BA%86/"/>
    <id>http://yangyy.top/2022/07/19/%E7%BB%9F%E8%AE%A1%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%E7%9A%84%E7%9E%8E%E6%8A%98%E8%85%BE-%E7%BB%88%E4%BA%8E%E6%88%90%E5%8A%9F%E4%BA%86/</id>
    <published>2022-07-19T01:21:50.000Z</published>
    <updated>2022-07-19T02:01:03.240Z</updated>
    
    <content type="html"><![CDATA[<p>因为此前学习了给文章加密的技术，所以打算此后将博客完全开放，故想给博客增加文章阅读次数统计的功能，折腾了半天，绕了许多弯路，其实本身并不复杂。</p><p>一开始直接搜索浏览次数统计，网上推荐最多的是 <strong>busuanzi|不蒜子</strong>（这个名字挺有趣的，我一开始以为是卜算子），直接照搬吧（过程不赘述了，无非是安装插件、更改配置文件罢），确实也统计出来文章阅读次数，但是只能点开文章才能看到，这并不如我意，我希望在文章外部显示。此时我以为是出了bug（现在来看并不是，实际上不蒜子的功能就是这样的，不包括在文章外部显示）。</p><p>于是去求助一鸣哥，因为他的博客文章阅读次数是外部可见。一鸣哥和我说不蒜子可以的，但是他用的是waline评论系统，系统自带了统计功能，于是开始折腾waline评论系统。又是注册LeanCloud国际版又是改配置文件，最后还是出问题了，hexo g不成功。</p><p>————————————————————————</p><p>手动分割线，这里文字无法完全表达我的情感，很有必要给博客文章添加表情，我去搞定这个再说。</p><p>————————————————————————我回来了。</p><p>话接当时hexo g不成功，心态大崩:sob::sob::sob:，没效果也比出bug强啊。还好参照的博主说了，next主题版本低可能导致generate不成功，于是寻求next主题升级的办法。</p><p>看了一些帖子，似乎都很麻烦，我太懒了:sleeping:，所以放弃了，心想能统计就行了，外面显示不了就算了，但是评论系统还是valine和waline并存呢，不知道是不是因为博客关联了两个LeanCloud（国内版和国际版）应用，评论系统直接崩了。于是干脆把waline和valine的应用全删了，插件留着问题也不大，waline的配置信息也全删了，重新创建valine在LeanCloud的应用，重新设置valine的配置信息。</p><p>这时候注意到了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">Srx46WYtgI2COUqAi761ccR8-gzGzoHsz</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">bNpdyeUlKIvb6bUb42mYvy0h</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-CN</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure><p>visitors这一项，原本是false，这不就是浏览次数统计嘛，于是改为true，看看效果。</p><p>:grinning:可以在文章外部显示阅读次数了，但是点进去居然有两个阅读次数，而且还不一样。:disappointed:</p><p>到底是什么问题呢？（此时已经忘记最早是用不蒜子了）</p><p>重新梳理添加阅读次数的思路才发现用了busuanzi_count，马上在配置文件把enable改成false。</p><p>hexo g，成功！完美！:satisfied::satisfied::satisfied:</p><p>其实本身是很简单的事情，因为valine评论系统自带统计阅读次数和评论次数功能，直接在配置文件改一行就行了，结果搞了这么半天还差点把自己的网站评论系统搞崩了，以后要好好看配置信息！</p>]]></content>
    
    
    <summary type="html">简简单单的阅读次数统计折腾了半天，所幸最后做好了。</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>车牌识别项目Web端的搭建</title>
    <link href="http://yangyy.top/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>http://yangyy.top/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2022-07-18T07:36:21.000Z</published>
    <updated>2022-07-20T01:12:49.272Z</updated>
    
    <content type="html"><![CDATA[<h4 id="说说具体技术之前的一些曲折吧，如果想看技术直接向后翻即可。"><a class="header-anchor" href="#说说具体技术之前的一些曲折吧，如果想看技术直接向后翻即可。">¶</a>说说具体技术之前的一些曲折吧，如果想看技术直接向后翻即可。</h4><p>车牌识别项目的大致功能我们已经完成：手动读取一张图片最终输出图中的车牌号。接着就是搭建一个网页，我们小组目标的功能是：用户可以向该网页上传图片，一经上传，我们的程序就开始工作，最终输出识别出的车牌号。计划用python flask实现。说得很理想，但是其实我们小组的成员python flask的知识储备基本为0。</p><p>Web的搭建由我和周延霖负责，周延霖认为上述功能要求过高，应该做成静态网页输出识别结果即可。其实一开始想的也比较难，做出一个可以上传图片的网页，把图片存储到本地文件夹确实没什么问题，但是怎么让我们的pyhton程序能够主动调用这张图片进行识别呢，这个逻辑说起来很简单但是其实我们不知道怎么实现。林筠皓建议设置一个控件用于启动python程序，这似乎可行。</p><p>关于Web搭建的准备，系统地学习Python Flask不仅没有必要（在人工智能的项目里面学习Web知识？）而且也很难实现（基本课时都在八小时以上），看老师给的PPT也很不好学。只好直接看别人的代码了。</p><h4 id="正式开始Web的搭建之路，还请读者注意，本篇文章不是系统地教学，只是记录自己短期内在完全没有相关知识储备的情况下，怎么利用Python-Flask迅速搭建起一个满足需求的网页。"><a class="header-anchor" href="#正式开始Web的搭建之路，还请读者注意，本篇文章不是系统地教学，只是记录自己短期内在完全没有相关知识储备的情况下，怎么利用Python-Flask迅速搭建起一个满足需求的网页。">¶</a>正式开始Web的搭建之路，还请读者注意，本篇文章不是系统地教学，只是记录自己短期内在完全没有相关知识储备的情况下，怎么利用Python Flask迅速搭建起一个满足需求的网页。</h4><p>刚开始只是打算一点一点地实现目标功能罢，先从上传图片做起，这个的参考资源的获取也是比较容易的。此处参考bilibili网站【谷雨课堂】Python干货实战【030】 网站开发之-上传图片或文件，链接：<a href="https://www.bilibili.com/video/BV1Rh41117yy?share_source=copy_web&amp;vd_source=a903512a82ff2959ba4cac987f40e02a%E3%80%82">https://www.bilibili.com/video/BV1Rh41117yy?share_source=copy_web&amp;vd_source=a903512a82ff2959ba4cac987f40e02a。</a></p><p>1.先介绍一下基本的工作环境配置：</p><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="配置文件夹"></p><ul><li><p>app.py文件就是网页的运行程序。</p></li><li><p>templates文件夹需要有一个upload（其他名字也行）.html文件，主要是网页的前端代码，app.py文件会调用该html文件。</p></li><li><p>static文件夹底下有个upload文件夹用于存放用户上传的文件。</p></li><li><p>这个upload文件夹我全程似乎没有用到。</p></li></ul><p>2.先看upload.html文件，这个主要就是相当于设计你的网页要长什么样。</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>File Upload<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/api/upload"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">'上传'</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>title就是网页的名称了，只需要一个上传文件的表单即可，非常简单，不必赘述。效果如图所示。</p><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/%E7%BD%91%E9%A1%B5%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.png" alt="网页效果"></p><p>3.app.py文件，运行网页的根本。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, url_for, redirect, render_template, request</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> character<span class="comment"># 字符切割的API所在文件</span></span><br><span class="line"><span class="keyword">import</span> my_cnn_predict<span class="comment"># 字符识别的API所在文件</span></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基础路径</span></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line"><span class="comment"># static路径</span></span><br><span class="line">STATIC_DIR = os.path.join(BASE_DIR, <span class="string">'static'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传路径（static文件夹下的upload文件夹）</span></span><br><span class="line">UPLOAD_DIR = os.path.join(STATIC_DIR, <span class="string">'upload'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传文件处理，自动找上传的参数名</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upfile</span>(<span class="params">field=<span class="string">''</span>, <span class="built_in">dir</span>=<span class="string">''</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(request.files) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> field == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> request.files:</span><br><span class="line">            field = k</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    f = request.files[field]</span><br><span class="line">    <span class="keyword">if</span> f == <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"没有上传的字段"</span> + field)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    fname = f.filename</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> fname == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    ext = fname.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line">    unix_time = <span class="built_in">int</span>(time.time())</span><br><span class="line">    new_filename = <span class="built_in">str</span>(unix_time) + <span class="string">'.'</span> + ext</span><br><span class="line">    now = <span class="built_in">int</span>(time.time())</span><br><span class="line"></span><br><span class="line">    timeStruct = time.localtime(now)</span><br><span class="line">    str_ymd = time.strftime(<span class="string">"%Y-%m-%d"</span>, timeStruct)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">dir</span> == <span class="string">''</span>:</span><br><span class="line">        <span class="built_in">dir</span> = str_ymd</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(UPLOAD_DIR+<span class="string">'/'</span>+<span class="built_in">dir</span>):</span><br><span class="line">        os.makedirs(UPLOAD_DIR+<span class="string">'/'</span>+<span class="built_in">dir</span>)</span><br><span class="line">    <span class="built_in">print</span>(UPLOAD_DIR+<span class="string">'/'</span>+<span class="built_in">dir</span>+<span class="string">'/'</span>+new_filename)</span><br><span class="line">    f.save(UPLOAD_DIR+<span class="string">'/'</span>+<span class="built_in">dir</span>+<span class="string">'/'</span>+new_filename)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dir</span>+<span class="string">'/'</span>+new_filename, new_filename</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">"/"</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'upload.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">"/api/upload"</span>, methods=[<span class="string">'POST'</span>]</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传文件的函数，修改的关键所在，其他地方不动</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">网页原本的思路是：</span></span><br><span class="line"><span class="string">上传一个文件|图片，一个if-else语句，如果没有上传文件则提示没有上传文件，否则创建一个文件夹（根据时间）存储该文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">那么修改的可能就出现了，完全不需要实现之前想的那么复杂的逻辑</span></span><br><span class="line"><span class="string">只需要在有上传文件的情况下调用存储好的图片和车牌识别的API即可</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">首先修改张龑的API，原本是以文件夹为单位处理（逐个处理该文件夹下所有图片），现在只需要以图片为单位处理即可，怎么修改下一小节再描述</span></span><br><span class="line"><span class="string">切分的结果存储在results文件夹下，以该图片命名的文件夹</span></span><br><span class="line"><span class="string">接着向字符识别网络传输切分后的图片存储路径，识别结果作为字符串直接打印即可</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploader</span>():</span></span><br><span class="line">    upload_file, new_filename = upfile()</span><br><span class="line">    <span class="keyword">if</span> upload_file == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"您没有上传文件 &lt;a href='/'&gt;返回&lt;/a&gt;"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        character.split(<span class="string">"static/upload/2022-07-18"</span>, new_filename, <span class="string">"results"</span>)</span><br><span class="line">        result = my_cnn_predict.predict(<span class="string">"results/"</span> + new_filename.rstrip(<span class="string">".jpg"</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&lt;a href='/static/upload/"</span> + upload_file + <span class="string">"'&gt;"</span> + result + <span class="string">"&lt;/a&gt; &lt;a href='/'&gt;返回&lt;/a&gt;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>图片存储情况如下图所示。</p><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8%E6%83%85%E5%86%B5.png" alt="图片存储"></p><p>4.最后就是修改切分字符的API了</p><p>原本是一个文件夹下遍历所有图片，现在只需要对传入的图片做处理即可，取消循环，比较简单。</p><h4 id="最后让大家看看效果吧"><a class="header-anchor" href="#最后让大家看看效果吧">¶</a>最后让大家看看效果吧</h4><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/%E7%BD%91%E9%A1%B5%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.png" alt="网页效果"></p><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/i1.png" alt="image"></p><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/i2.png" alt="image"></p><p><img src="/2022/07/18/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AEWeb%E7%AB%AF%E7%9A%84%E6%90%AD%E5%BB%BA/i3.png" alt="image"></p><p>可以重复多次上传图片进行识别，这里不过多进行演示，完美。</p>]]></content>
    
    
    <summary type="html">计划两个人一周完成的任务居然自己一个上午搞定了？！开心&amp;很有成就感</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Python" scheme="http://yangyy.top/tags/Python/"/>
    
    <category term="车牌识别项目" scheme="http://yangyy.top/tags/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Flask" scheme="http://yangyy.top/tags/Flask/"/>
    
    <category term="Web" scheme="http://yangyy.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>2022-7-17日记</title>
    <link href="http://yangyy.top/2022/07/17/2022-7-17%E6%97%A5%E8%AE%B0/"/>
    <id>http://yangyy.top/2022/07/17/2022-7-17%E6%97%A5%E8%AE%B0/</id>
    <published>2022-07-17T15:14:20.000Z</published>
    <updated>2022-07-17T15:33:39.278Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="41847be651d62ef074cf30d7c706f220d4c9349ecd1869f27012d12fcee219c3">d361d61c52df07d9e0bf0afb5b4e2d2e89dd1552fc6e6d5104e5bb1dee2b1ecc7eee16c48ea126b308049dbcf7d812e043a48b06ccfefba7a0543472bc7a0228b86150a5b0e021b1810c1cb1243f1f81dfa6cd5dc14c903d679ad9d7c6fb97bc2f745810212cb7740b20badd5241d3da74bb9371a0866a09461e4d81db7cad7a7c48b3b6941977022b0dfa352db26abfc4e844282dd28eb499d9150d997587f0da64d2aae09b3e4729147ecad1a901f1f41a6aa1b7938056dbbddcadb15324774ebdff7bb1f5d893f7b8c547f7de465853858c255b4d10fa11be3628640cf61cf32578d36d82e2e48941a08b3d82d482304b110d6205247f8658b4a1c9cbc2e6eb9a966e781445d8fb3811abdb9948d8c45edecb34841528908c0f4ecc0b05de27da2537ddb89e6f558aa90b13f1658cf75ee8f2e7ceb715b2a0285ee645bc90a8f03b39ec8472ca7abba5833425e8b468dbf3026f65786f37c6abed85d0424d47261e50f6685396d93462c2111d17da9e5559f7aa8dde5a32cc712882288b9e419aaba6f97ccd12e06485a490990f10d4cdb49e63d103103fa06a13598b155a8d55ab0af79236bfe3d5420ec211ce9ecb0b4a6334d87011cc58ecf9d51006eb6c251a44891296dc28fbdfcac55ebaa75628e8d626d9186020e7fbf2e419bb05fdd9bcf70a262170ae5e7dce9c69135204a27774239812ab666cf78e24be3e6a20c844cec015e48688b897ca8cd9e53b18bdce63e318a7121e9a8a7798bbcf22dae0f3037a3f0581f8fe90385b0e6a7c44ba8fc00bbd2ea9bb37ad6e4bf0062db8e44a0a080539278933ca4d07eeb7cda5ab3788b2a464e3d5ba4838e12fc65b7573803f93daa772509f6767619290737753cd74dbf17c97f6f4e874070c33e9dff7d256e3c0d34349f1c3211549605152ca345a3cbfd83285bc200cbe697e23d4a7960654cd1a8d9b0dcb72df6655cdcc86e71bfbc248753a679d857166849362669e011592dde0a3eef8462de282fdab6c604769f287e9246586b31b6b7bcb3c926470ad0086e4079ec6cbf433f914a55e5827c14d905d37d0b2c81deff773403f131d000de89767f0509e3e0b1163ca85662e1a14c0b14fcc642f0bef9353f0335de919599749da74c630f79454e7773c4713c12b1ada15c0a1aab0e077d92672a241fb78bfeeab205de8333209ee0d2220115b162df892b6928e3630e9719bc4aba87b68af17fb7ac5165f826e77b72b35dd95804ad9b475ebc98bbfd1fdd568ab6a80cf402c34ad88240cdc43672e7fb8dad153f82edbe3ba280545c1825e091c06542360245424f3d195089d70a990935883d69c6e44785d26f106f22ef844cc1fc246039e55d5ab1e9c4f0a9703e508df400d144589452fd75e0a0bc2073893b007e79f7cac7ccc40527625d017a1206d09971fb7eef2503d7c1728b1ec77e1d30e84a2889b1acc044861f194fd970a4bd56976b4538134350db1d5ae7c034002bac44e6ac69b81d5d31c8b5cbdc934f284d4073e083ddba49e015e018d3ea724da6b6bd4923f666494696dec31001e87c95b33c5b2bbb4d2a7634d3ae2dc2f9b0cc83c440fefb883208ace1b43e980b74f224a5955f5f49036bc2dbb86598020dc91e8777d8983916283d80a2f132798e735e0d821f4a9898613ac3ba1a5bbe51ddba73ca84ab46cf75171422eeabe6ea263ac09e9ff3cd9f53de53bbb900c9aaa7988817c610781afef44d5ff4347b9457e19a41684cac17f12697d35d72cf4bef3d8a421485cbf2fabdc4fc316d0f3055d1922109460a036f4cb987f9248882c28411508034bedb47ac4e60c24419c45ade854404d8d3c4bb17c969ca3a5fac8b822c432499afcf04b21021fd92449c897d02b0379fe2c3ba708ded8c10bbfcc43e7cc1b3515751ccc06f95d041377b511e4d6886ef3473754e5651cca48151b0896c502a3e00298a3ddc1135061813092a8cb72540559e633afd9d849c146e645ec6a66f2d0783b952f835e718fee63adf4f7b3c78000f02d5a5ace4b2fc00e7d03e709fa905941c28595d9dc40a6270dcfc0f6a46032cd42c85543bf5528949dc7fd1e4faa5d2b0d2b13f22ef20af661ad1db8091f742d441693523c4ca4087624680af8ede6e8c3fb7a06f92ba1d2f89528d121e2bc857149d6a8036403a39df44012e99f52b14c5ff53b701172e39c796b2612f10b0bfdb70b3fb6a15693bdb99dac0c0e3d2fd5d808d37f9de8d2ec5bf86f0efcb15327bddf042dd0949f7002ed62ba9f114b0740733a3063b5af45172802d81543a9c6f32875648b72d223afb2a2157742e2a1ecd462b214bb014cdf5c423fd41ea1fd5887990f7a44ae82462097903bfbece9cdebdc1342267ba245fd7a3a7601d74c6996e78e5382e0c1988cc045ee8b7f301fae0488cd897632cc78d9a3d8766b9c7f137bca564224596385c80ffd6c1d85cc255ba7c6cacd07d734b7d49d9b1a3f0cc337248f8eec886880fefbc63ca4235126900286df3da2cf4b759df7bdbff07348fdf427bee1b5c7602eafbc1374e716cffaca040897cd43af516f87b35360460ecd5741c6627d781f36941b12eaafdb7b8ce9273dfd16d295f74061621c831a925d9168f9c2eb762f368766159c772f1b852e2ad6d1d7e33515778c1a30ca4f6bffc98d2660a226b06a13e42d9d243681cc0304d45ecf7392549abc9d80a5aa1137de6429d77dadfd935fd6c29102fb9c771b62bda1dca1e3c19888df04fdab8fabe2af91d7cfc8c6899435e9bba476fd6b77195bb360424b3f10bfe43fc20708412d2a4794f861c3a393f3564eedc32fd1e4ac86d3a6a16e48fb3127637fae2a6044d5382191a62e33844d33b48f68f8894aed0c5bfd5ab17f021d7a1a2dc73edbc3d30609838270d924de2376df709c7f7929c1ebc15308522a45e748435481d1057ff108e42495c6563ea17e1a0ba888a28389ad84646f729fca61072d630e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是我的日记，不能给你看哦，不过你要是猜对了密码，那就看叭~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">继续培养写日记的习惯，第三天啦</summary>
    
    
    
    <category term="生活的点点滴滴" scheme="http://yangyy.top/categories/%E7%94%9F%E6%B4%BB%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo上设置文章加密</title>
    <link href="http://yangyy.top/2022/07/17/hexo%E4%B8%8A%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
    <id>http://yangyy.top/2022/07/17/hexo%E4%B8%8A%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</id>
    <published>2022-07-17T15:01:09.000Z</published>
    <updated>2022-07-17T15:18:07.034Z</updated>
    
    <content type="html"><![CDATA[<p>之前在创建博客的想法中有说到：由于我想在本博客记录我的学习和生活，学习需要开源、生活需要隐私，导致我对这个博客的定位和开放性一直很纠结。现在新的技术——文章加密的引入解决了我面临问题。下面直接说如何设置文章加密。</p><p>1.安装插件</p><p><code>$ npm install hexo-blog-encrypt --save</code></p><p>2.在站点配置文件最后添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 文章加密</span><br><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  abstract: （例）这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。</span><br><span class="line">  message: （例）输入密码，查看文章。</span><br></pre></td></tr></table></figure><p>这样就完成了站点的配置要求。</p><p>3.对于要加密的文章，在Front-matter中单独添加信息，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">password: 123456</span><br><span class="line">message: 看不到吧，hhhh，不告诉你密码是123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>（这样不同文章的密码可以不一样）</p><p>4.后续还可以设置浏览数、评论、作者信息的隐藏，但是我没有这方面需求，不再额外拓展啦。</p><p>ps：一开始想的是隐藏文章而不是文章加密，但是实际上文章加密更符合我的小心思，这样博客文章显得很多，但是又不会都被看到。就不给你们看，猜密码去吧~</p>]]></content>
    
    
    <summary type="html">可以给文章加密咯，解决了我的矛盾~</summary>
    
    
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何在hexo的文章中插入图片</title>
    <link href="http://yangyy.top/2022/07/17/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E7%9A%84%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://yangyy.top/2022/07/17/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E7%9A%84%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2022-07-17T03:30:27.000Z</published>
    <updated>2022-07-17T03:58:51.577Z</updated>
    
    <content type="html"><![CDATA[<p>一开始想的很简单，直接获取图片，然后paste到Typora上，在本地编辑的时候确实看着没问题。他的实际思路就是，把图片存储在C盘上Typora的数据文件夹中，然后可以本地读取到图片。</p><p>但是<code>hexo g</code>之后，在本地服务器上看，图片都显示不出来。</p><p>其实也挺正常的，博客在本地服务器的范围也就是yangyy这个文件夹，超出的范围是探索不到的，更不用说部署到云端了，更看不到了。</p><p>还是CSDN解决之，总结一下吧。</p><p>1.安装插件</p><p><code>$ npm install hexo-asset-image --save </code></p><p>2.更改站点配置文件（false改成true）</p><p><code>post_asset_folder: true</code></p><p><strong>这时候理论上就准备完成了</strong></p><p>3.hexo new ”example“</p><p>这时候就会在source/_posts文件夹下面产生对应的文章和对应的文件夹，把图片（比如image1.jpg）放到文件夹里面。</p><p>在文章中引用的格式：</p><p><code>![图片描述](./example/image1.jpg)</code></p><p>理论上这样就可以了，因为图片现在也在博客能检索到的范围之内了，但是试了一下还是不行。</p><p>4.打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p><p>(不用仔细看代码，直接改就行)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line"><span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line"><span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line"><span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line"><span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">   !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">  <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">srcArray.<span class="title function_">shift</span>();</span><br><span class="line">  src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样就没问题了，最终能在博客上显示图片。<strong>看看效果叭</strong>。</p><p><img src="/2022/07/17/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E7%9A%84%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/example.png" alt="image"></p><p>以上。</p>]]></content>
    
    
    <summary type="html">记录一下怎么在hexo生成的文章中插入图片</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>2022-7-16日记</title>
    <link href="http://yangyy.top/2022/07/16/2022-7-16%E6%97%A5%E8%AE%B0/"/>
    <id>http://yangyy.top/2022/07/16/2022-7-16%E6%97%A5%E8%AE%B0/</id>
    <published>2022-07-16T15:00:41.000Z</published>
    <updated>2022-07-17T15:18:46.547Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0bc2fa63dd91003413ac7aacaa57f26fd2a990cfb99e54b6cbb29900a69b429e">d361d61c52df07d9e0bf0afb5b4e2d2e397a6121648f8b7637ce46b1a194c3aac0b45496e9fc37c865b15e223ade830eff20cbd88000b54963fa27522f929cbf4969bd1a8359ed6d93ed8c920f999de702af37e5d3198cff486017ed1b0a1cab9635f0e98c3bfca295d66412798be1c6e27a768980dcc86fb769428014b7cc3888f25f66cfccbe32d1e082a1d11334cec9a2741e27a566730adee6574de1b5083698bbf10327fc27e5685c4547460d81bb6a7d3a2703320acf312478d7e2ff6c08efd3d548c85eaf425aac8f308f016ef87b584655efbdc5607bb9bfac5f83e23a0fed61242b118dd788e6091977e8d833710e68c5d3d3a8f498453e77704b5d7d23a82ac5ab8af361536f01bef8b0b041be1d4a4415768c5781a632975bc9ca71ba73a601d2f076cbe87b01e98f3c2e077c56d934f1927e01b2f0f23469741df77da2bb0663530c97122b6fa8078e58b99c3510b874a552e8c3cc1a34e38f56bd800c32409bc0cc24dfeb7aa99fccfebcf6a7296d6453201563c4b8982d483b979047cb953f12f989cbe88cb5d2efd658fdfd1eed4d5eccf0741841a17450afd1b24f165c9a41ceddd5a2f71604a6f9352803b574b756a761d733b867352d8acea3fc6819ed58da9c369687c79c45a50d4b2aeae7f53f5a88f26afac5173409d582d8c5d6aba0eb70ef34079d37c3966c0ffc8fd1417dab5e0c0f5aabd3fcae2bff642c9238dfad9e21cc178085772c2e8dd50579e8cffd1cc2e6c5205a9f09e60e99f6408efeda4c11cfc51e7d6bf574d58572dd75a4170154b543edf458bc22c6e27186ce845cd1f099b0317d98fb9191f40d870cc7eaa3729a2900be99504f47524c796d124062b1d1f3b9780912946281a6c00aaa6c4f4225dcce402a7c86277a7d3fd46d77eff46b48417eec1baf4319a32031c2426cf34654352909749925b2d4841ca4513773587ebc5ce3da34db74b58ef10e2f5543f0c8959b96dfa8f198e410011cd89bfeb8b080f05fd48d3b67319c6fc560acd0062f2ca3ae777ed939792c2c5f9d0b05ffbd42d701d8d8350b82eb924cda135685591d2ae662119c7d9a2d5a6d674847f71dd73acf167a886daff143ef6766c5b58efad0394fcaee04bdc7822c0b5ca8986ba50a1b558b6a69c2bc116aa04f3c468527136aaa334ca152d5c89244df444f5c7c32ee99ccdd92ff3623e7f3cdec5594cbb8a80f786c5db20bb1ac4596ddac37529fd1dd7f048983382fde8cc32a1e494f18d902e5136734a9cb885d680fb6dcc81b6065248a95585747cb8c2613720e6c50e61accb55967299ded34932da8eb2dea364d131cfc0737b1ce313d05781d19c0fafc3414e850891d9cf24bf12cabc612fe2a098ded5a8918f6258102e0d911d454bd83a6fdd5a7ac1a35ec0870df741ad3ee386e9cfab8aa2507ab0d6dda0853c13b8295b9630fa805f0729b0c8299b2514e5732d2610d62c38cfeaa56e225399d793105083b97b1b947026b35598fcc8350d81f0a2e91fc734f3c9cfc8b0ac7b496d7fa73c6c263c12ee7dd4e0a4f93cae5dfe201af3712207b0c8a69f741a7f50220762a175a245fa8b3a9365bc6d403bd50dee57bbbf221935ef4197b7cff7cb50fd8bb767d05e3bb100086ed04eb75795597c6979a2064c030a96126fe344ab101372fb6eb81350706d54df7985c6b486cf20b488bc249c157878147eeae4a3f7f204e3c733be18858d2f4bd43eb25de14df5db650c4296c396b083071d533915862dcfb09cec9e41c8bd955f25b88b531c366c925d7442350b9f9fdcec78ed4cb29d79f535a3addba86a3e7a47705725cde129a7c3c3cdeace0ac510288f357808f1e9bbfc1426d9fb1ffea48445fa8042c2f472f3a9564e15ec9d82e0f3f405cb9b32ceb5b23c7b55ce0c4011b649dc405dbbe928c64c2fd5cc0efd6546c043f849e770b07c26788c5147149c5fb0d45060da278ae5833faeca0b2a2184a589a3a218c0d187f37ccd63f57e65433459bac9fbf952205374ff2c924dfcb68d9dfd7200421afab507133c211d7732b26ecdb4a8d545a58b33be15abe39668373279bf3c6592b39a54d4ec205f345ef3d8a89e02d1e52ed9cbba0e40f1e82e26a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是我的日记，不能给你看哦，不过你要是猜对了密码，那就看叭~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">继续培养写日记的习惯 &amp; 挺开心的一天</summary>
    
    
    
    <category term="生活的点点滴滴" scheme="http://yangyy.top/categories/%E7%94%9F%E6%B4%BB%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建博客的第二天</title>
    <link href="http://yangyy.top/2022/07/16/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>http://yangyy.top/2022/07/16/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%A4%A9/</id>
    <published>2022-07-16T08:24:29.000Z</published>
    <updated>2022-07-16T09:09:44.251Z</updated>
    
    <content type="html"><![CDATA[<p>搭建博客的第一天只是创建了这么一个博客网站并且绑定了购买的域名。</p><p>今天改用Next主题的Gemini模式，在这个基础上完善了自己的界面，今天主要记录完善的过程。</p><p><strong>一.    添加搜索功能</strong></p><p><code>$ npm install hexo-generator-searchdb --save</code></p><p><strong>二.    添加关于、标签、分类模块</strong></p><p>​    1.创建标签、分类的页面</p><p>​    在根目录下输入：    <code>$ hexo new page about/tags/categories</code></p><p>​    在source文件夹下有了对应的页面</p><p>​    2.在每个页面对应的文件夹下有一个index.md文件，打开并编辑</p><p>​    <code>title: 关于/标签/分类</code></p><p>​    添加一行内容：    <code>type: &quot;about/tags/categories&quot;</code></p><p>​    这样新的页面就关联上了这些模块</p><p>​    3.前往主题配置文件_config.yml中，把menu中对应的注释去掉</p><p>​    4.在文章的开头部分加上</p><p>​    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">  - tag1</span><br><span class="line">  - tag2</span><br><span class="line">  ...</span><br><span class="line">categories:</span><br><span class="line">  - cat1</span><br><span class="line">  - cat2</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>​    即可。</p><p><strong>三.主题配置修改之后，本地有效但是网络端无效的解决</strong></p><p>​    1.找到next主题文件夹下Source文件夹下的lib文件夹，重命名为ywl</p><p>​    2.在主题配置文件_config.yml中找到Vendors，修改内容为：</p><p>​    <code>_internal: ywl</code>即可。</p><p>​    </p>]]></content>
    
    
    <summary type="html">越来越喜欢自己的博客了。</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>2022/7/15 日记</title>
    <link href="http://yangyy.top/2022/07/15/2022-7-15-%E6%97%A5%E8%AE%B0/"/>
    <id>http://yangyy.top/2022/07/15/2022-7-15-%E6%97%A5%E8%AE%B0/</id>
    <published>2022-07-15T15:29:35.000Z</published>
    <updated>2022-07-17T14:52:12.483Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d01b886f0794b71890bc0caef473af412114d3f291261d0da6182a263481876c">d361d61c52df07d9e0bf0afb5b4e2d2e397a6121648f8b7637ce46b1a194c3aa76563209201e893e77bbd5b405feabe50a7dfbdf0a5e87ae17452a44f1f80336dd7188efa35ab02a5cf134038064b6b378ec273dbc1c62e67ad33621e88b8c6ece0ed488493ab5a1f803fc0472d0962e1d5d61c9d39359afdb66c9fc07a0d57e15b91956f3461be00e4785f361f269db3886e8c3210da25fda8fdcf8cbf32faeb801ed01ad31457c21ea2de960940a475e8a8d8b9bc121ac7e1c42ac52dad26860413bacc5d85d38082cef0efab6f2dbd99a96c2b962eedf2774c1a5bf9cc6cb2bdfa0cb1f5ebb1b7da8cc81f2f2865f35f3c0b891416b0249d1722ac6d4709a5de1bda5e15cd7a8165b7179438978216d3440ff5ed9364a343df6a42e63304dcba048208e06ad5eea29a8c2a7d1462a0724e0d26414051f251f075ba1a0139dac7fd3dfbf07b487a215c5726ba588a7f5e820b8baa5052d75150fb283441c912c58259aa50615365fcda646edce0fd9886ce1a47f00ce382b13ddbb31ed78863a633d7cc156ae8987bc5b5a594e6721fb00b464a4cab80dedf572be34ef6b1667d9411a4c301e49de621efa9e4c8f39eea58ca91f139d9d230640458e2839d9d8fb4cde92ccb51173bcf60f9f9c7935323f7cb912810079ae076612e875712f78ce133302ad8cb72ee8ca38a7b24c81a3f5d8b53c2635cd60a6c3436931500a1e3a1b5e39da4274140f329934381e1afdf40e8c16139929779688913f603b5b984140c2b61580695bca317bfadb9d2d587b5a1a7526878df274e2a6066c3f406c34a22e0cb2b7fadba435b72150486d8852c489ef7ea58285b4300697d780f6b7a0e37855d8c9417431755e9afbddef5cade3ac97c3ca748df545cfccfe51a9ef2a55c07566d174c990b4671373fc7d999c299129b67aba98e6aa726fdc63e22ffd968b6a128d08513010cf3d4dfd1270ff27289380786294af79d6ba8428488fefb1957c61792f0e9c653e71d84e5bd5692fc0498722103b31e54ee3ccc8a23f397a3cb8ee2f04cb091f3577c9cc6994ec77694396c5e3b76e13ad45dd60b417c029f28466ecf604f50daadd70e8f40b2f6be952ff50d66ec0ec30094e0db81496addd17123f141b10f95647c3b17bcfac5538f60380a09dad1ff3ffd8395fb524bb5c4d4880c301604f32b0143724697e9ecd31dd708653f1986c031cd98a82a43197cc0af2dbbe8bbd5ffe1a2d808cee0a6906c6be27f3c77120f25728529f9637935f42c2a6086cfb0ac36f2d32</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是我的日记，不能给你看哦，不过你要是猜对了密码，那就看叭~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">博客的第一篇日记，简单的流水账。</summary>
    
    
    
    <category term="生活的点点滴滴" scheme="http://yangyy.top/categories/%E7%94%9F%E6%B4%BB%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>第一个成熟的卷积神经网络——字符识别</title>
    <link href="http://yangyy.top/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/"/>
    <id>http://yangyy.top/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/</id>
    <published>2022-07-15T15:13:38.000Z</published>
    <updated>2022-07-19T03:18:21.161Z</updated>
    
    <content type="html"><![CDATA[<p>​总算是开始了自己的第一篇技术博客。</p><p>​也总算是大概弄懂了一些深度学习、神经网络、卷积神经网络的知识，能靠自己实现识别字符的卷积神经网络了。</p><p>​今天时间所剩不多，可能写不完，写到哪算哪吧。</p><p>​在大二下的《人工智能导论》这门课开始接触深度学习，学得一知半解都算不上，啥都没弄明白，甚至还要做神经网络的实验，本是作为启蒙课的目的也没有达到，反而起到了揠苗助长的效果，让人觉得深度学习、神经网络特别难。就我目前的理解而言，我绝不敢说深度学习、神经网络简单，毕竟现在科技前沿都还没将之完全征服。但是我可以说，理解深度学习、神经网络的基本概念绝对不难。实际上我到目前为止也只是看了吴恩达老师不到半小时的讲解就入门了神经网络，实训课李伟老师一上午左右的讲解也让我掌握了数字图像基本概念和卷积神经网络的思路。不得不抨击一下这门课的设立，我被老师和实验弄迷糊的时间完全可以入门深度学习了，况且还让我很长一段时间对深度学习、神经网络有些畏惧，如今看来，似乎”不过如此“（bushi）。</p><p>​好吧，啰嗦了半天，好像都没时间写技术性的东西了。</p><p>​这次的任务是把老师已经用tensorflow1.x写好的识别字符的卷积神经网络改成用tensorflow2.x实现**（封装的特性）**。关于深度学习和神经网络的知识梳理有空再写吧。</p><p>​先到这里。</p><p>​————————————————————2022/7/15  23：28</p><p>​————————————————————2022/7/17  9：41接着写</p><p>​拖欠了两天都没写完哈哈。不过下一阶段的任务还没开始，也不急。字符识别卷积神经网络搭好了，接下来就是web的搭建了，Python的flask是完全没学过的内容。</p><p>​直接按照搭建网络的顺序逐个说明吧。</p><p><strong>一.数据读取</strong></p><p>现在很多CV领域的数据读取都是直接读取现成的数据集，但是这里需要从本地文件当中读取，并进行处理，这一部分tf1和tf2没区别，不用改。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_data</span>(<span class="params">dir_path</span>):</span></span><br><span class="line">    data = []</span><br><span class="line">    labels = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> os.listdir(dir_path):</span><br><span class="line">        item_path = os.path.join(dir_path, item)</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(item_path):</span><br><span class="line">            <span class="keyword">for</span> subitem <span class="keyword">in</span> os.listdir(item_path):</span><br><span class="line">                subitem_path = os.path.join(item_path, subitem)</span><br><span class="line">                gray_image = cv.imread(subitem_path, cv.IMREAD_GRAYSCALE)</span><br><span class="line">                resized_image = cv.resize(gray_image, (IMAGE_WIDTH, IMAGE_HEIGHT))</span><br><span class="line">                data.append(resized_image.ravel())</span><br><span class="line">                labels.append(LABEL_DICT[item])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> np.array(data), np.array(labels)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">data文件夹里面有0~1，A~Z的所有字符，每个字符有一个文件夹存储对应图片，这部分代码的功能就是把每个图片读出来，转换成20*20的大小，label就是文件夹名称</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><p>正式进行数据读取的步骤开始有了变化。原本会对训练集和测试集都进行正则化，然后再把标签独热编码，这两步都是自定义的函数。tf2提供相关的API。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取训练集的特征矩阵、标签向量</span></span><br><span class="line">train_data, train_labels = load_data(TRAIN_DIR)</span><br><span class="line"><span class="comment"># 对训练集的标签向量执行独热编码,tf2提供API</span></span><br><span class="line">train_labels = tf.one_hot(train_labels, <span class="number">34</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取训练集的总样本数</span></span><br><span class="line">train_samples_count = <span class="built_in">len</span>(train_data)</span><br><span class="line">train_indicies = np.arange(train_samples_count)</span><br><span class="line"><span class="comment"># 获得打乱的索引序列</span></span><br><span class="line">np.random.shuffle(train_indicies)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取测试集的特征矩阵、标签向量</span></span><br><span class="line">test_data, test_labels = load_data(TEST_DIR)</span><br><span class="line"><span class="comment"># 对测试集的标签向量执行独热编码</span></span><br><span class="line">test_labels = tf.one_hot(test_labels, <span class="number">34</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入tf2搭建的网络之后还要reshape，变成[N, width, height, 1(灰度图)]的形式</span></span><br><span class="line">train_data = tf.reshape(train_data, (train_data.shape[<span class="number">0</span>], IMAGE_WIDTH, IMAGE_HEIGHT, <span class="number">1</span>))</span><br><span class="line">test_data = tf.reshape(test_data, (test_data.shape[<span class="number">0</span>], IMAGE_WIDTH, IMAGE_HEIGHT, <span class="number">1</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">可能会问，原先的正则化哪去了，答案是：直接在神经网络入口加一层正则化层就行</span></span><br><span class="line"><span class="string">这样不用分别处理训练集和测试集，它们进入网络就会正则化了</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><p><strong>二.搭建网络（封装的特性）</strong></p><p>tf2搭建网络最明显的特点就是<strong>封装的特性</strong>，直接在一个对象当中设置好每一层的参数就可以，不需要手动实现底层代码，有了非常明显的改进。</p><p>直接上代码。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">network = tf.keras.models.Sequential([</span><br><span class="line">    <span class="comment"># 正式操作之前先进行正则化，专门的正则化层</span></span><br><span class="line">    tf.keras.layers.BatchNormalization(),</span><br><span class="line">    <span class="comment"># 第一层卷积层，32个卷积核，大小5*5，自动初始化，relu激活，输入形状固定</span></span><br><span class="line">    tf.keras.layers.Conv2D(filters=<span class="number">32</span>, kernel_size=<span class="number">5</span>, activation=<span class="string">'relu'</span>, input_shape=(IMAGE_WIDTH, IMAGE_HEIGHT, <span class="number">1</span>), padding=<span class="string">'same'</span>),</span><br><span class="line">    <span class="comment"># 第一层池化层</span></span><br><span class="line">    tf.keras.layers.MaxPool2D(pool_size=<span class="number">2</span>, strides=<span class="number">2</span>),  <span class="comment"># 20=&gt;10，步长应该取2</span></span><br><span class="line">    <span class="comment"># 第二层卷积层</span></span><br><span class="line">    tf.keras.layers.Conv2D(filters=<span class="number">64</span>, kernel_size=<span class="number">5</span>, activation=<span class="string">'relu'</span>, input_shape=(<span class="number">10</span>, <span class="number">10</span>, <span class="number">32</span>), padding=<span class="string">'same'</span>),</span><br><span class="line">    <span class="comment"># 第二层池化层</span></span><br><span class="line">    tf.keras.layers.MaxPool2D(pool_size=<span class="number">2</span>, strides=<span class="number">2</span>),  <span class="comment"># 10=&gt;5</span></span><br><span class="line">    <span class="comment"># 把二维矩阵展平成向量</span></span><br><span class="line">    tf.keras.layers.Flatten(),</span><br><span class="line">    <span class="comment"># 全连接层</span></span><br><span class="line">    tf.keras.layers.Dense(<span class="number">1024</span>, activation=<span class="string">'relu'</span>),</span><br><span class="line">    <span class="comment"># 全连接之后会导致参数爆炸，需要dropout一些数据</span></span><br><span class="line">    tf.keras.layers.Dropout(<span class="number">0.3</span>),</span><br><span class="line">    <span class="comment"># 仿射函数</span></span><br><span class="line">    tf.keras.layers.Dense(CLASSIFICATION_COUNT, activation=<span class="string">'softmax'</span>)</span><br><span class="line">])</span><br></pre></td></tr></tbody></table></figure><p>这只是前向传播的代码，交叉熵损失函数和反向传播算法如下。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">network.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3),# 反向传播算法&amp;学习率设置</span><br><span class="line">    loss=tf.keras.losses.BinaryCrossentropy(),# 交叉熵损失函数</span><br><span class="line">    metrics=['accuracy'])</span><br></pre></td></tr></tbody></table></figure><p><strong>三.训练模型、评估准确率、保存模型</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 训练模型</span></span><br><span class="line">network.fit(train_data, train_labels, batch_size=<span class="number">50</span>, epochs=<span class="number">30</span>, validation_split=<span class="number">0.02</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">直接指定batch_size和epochs即可，很方便</span></span><br><span class="line"><span class="string">validation_split这个参数就是每次训练时，把训练集中一定比例的数据不参与训练，用来测算正确率等参数，测出来也不改变参数</span></span><br><span class="line"><span class="string">最开始validation_split=0.1的时候，训练当中算出来的正确率很高，98/99%甚至100%。但是测试集效果不好，正确率89%左右。我估计是因为直接削减了10%的数据，泛化能力不强。</span></span><br><span class="line"><span class="string">但是如果设置validation_split=0.0，训练和测试效果很好，98~99%，但是实际检测效果反而不如前者，说明可能过拟合了</span></span><br><span class="line"><span class="string">所以设置validation_split=0.02，这样中庸的策略既保证了正确率，泛化能力又不错</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 评估准确率</span></span><br><span class="line">test_loss, test_acc = network.evaluate(test_data, test_labels)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'\n测试准确率：'</span>, test_acc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存模型</span></span><br><span class="line">network.save_weights(MODEL_PATH)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">保存模型可以直接保存模型。也可以保存模型的权重（参数），预测的时候，构造一个同架构的网络，直接加载参数即可。</span></span><br><span class="line"><span class="string">前者比较友好，很简单，但是队友用了后者就用后者吧，我觉得后者会更快，因为直接加载参数显然比直接加载模型要更简单</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><p><strong>四.实战预测</strong></p><p>1.自定义一个加载图片的函数。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_image</span>(<span class="params">image_path, width, height</span>):</span></span><br><span class="line">    gray_image = cv.imread(image_path, cv.IMREAD_GRAYSCALE)</span><br><span class="line">    resized_image = cv.resize(gray_image, (width, height))</span><br><span class="line">    data = []</span><br><span class="line">    data.append(resized_image.ravel())</span><br><span class="line">    <span class="keyword">return</span> np.array(data)</span><br></pre></td></tr></tbody></table></figure><p>2.搭建一个网络，并加载权重|参数，这主要是由之前保存只是保存了参数决定的，如果保存的是模型，就直接加载好了。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载训练好的模型</span></span><br><span class="line">model = tf.keras.models.Sequential([</span><br><span class="line">    <span class="comment"># 网络的具体架构不重复，和前文完全一致</span></span><br><span class="line">])</span><br><span class="line"><span class="comment"># 加载参数</span></span><br><span class="line">model.load_weights(<span class="string">"model/my_cnn_enu"</span>)</span><br><span class="line"><span class="comment"># 这样，model就是之前训练好的模型了</span></span><br></pre></td></tr></tbody></table></figure><p>3.读取图片，reshape成可以进入网络的样子</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">digit_image_path = <span class="string">"images/english.jpg"</span></span><br><span class="line">digit_image = load_image(digit_image_path, IMAGE_WIDTH, IMAGE_HEIGHT)</span><br><span class="line">english_image = tf.reshape(digit_image, [-<span class="number">1</span>, IMAGE_WIDTH, IMAGE_HEIGHT, <span class="number">1</span>])</span><br></pre></td></tr></tbody></table></figure><p>4.预测</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">results = model.predict(english_image)</span><br><span class="line"><span class="comment"># 选概率最大的</span></span><br><span class="line">num = np.argmax(results[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># 通过索引转成对应的字符</span></span><br><span class="line">new_dict = {v : k <span class="keyword">for</span> k, v <span class="keyword">in</span> LABEL_DICT.items()}<span class="comment">#反转字典</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"预测结果是："</span>, new_dict[num])</span><br><span class="line"><span class="comment"># 预测结束</span></span><br></pre></td></tr></tbody></table></figure><p><em><strong>以上就是全部的内容了，是不是挺简单的呢，反正我觉得挺简单的，哈哈。</strong></em></p><p>让大家看看效果叭。</p><p><img src="/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/image1.png" alt="image1"></p><p><img src="/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/image2.png" alt="image2"></p><p><img src="/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/image3.png" alt="image3"></p><p><img src="/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/image4.png" alt="image4"></p><p><img src="/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/image5.png" alt="image5"></p><p><img src="/2022/07/15/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%88%90%E7%86%9F%E7%9A%84%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/image6.png" alt="image6"></p><p>最后一张预测错惹，没办法，这个A真的很像4。</p><p>第一篇技术博客正式完结，实际用时也不久，挺好的。</p><p>谢谢观看~</p>]]></content>
    
    
    <summary type="html">总算是开始了自己的第一篇技术博客。</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="深度学习" scheme="http://yangyy.top/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="卷积神经网络" scheme="http://yangyy.top/tags/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="Python" scheme="http://yangyy.top/tags/Python/"/>
    
    <category term="车牌识别项目" scheme="http://yangyy.top/tags/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到我的博客</title>
    <link href="http://yangyy.top/2022/07/14/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yangyy.top/2022/07/14/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-07-14T07:41:44.000Z</published>
    <updated>2022-07-16T07:58:40.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到我的博客！"><a href="#欢迎来到我的博客！" class="headerlink" title="欢迎来到我的博客！"></a>欢迎来到我的博客！</h1><p>​        你好呀，我的朋友，欢迎来到我的博客！</p><p>​        想自己写博客已经很久了，一方面觉得把自己平时学习的心得、笔记梳理记录下来，对自己的学习大有裨益（对于一个准程序猿来说，拥有自己的学习、技术博客似乎十分必要）；另一方面是受樊一鸣同学（个人博客地址<strong>fanyiming.life</strong>)的影响，在一个属于自己的天地当中记录下自己平时的感受，对自己的所作所为复盘，多年后看来也是一笔宝贵的财富。</p><p>​        虽然想写博客的想法比较强烈，但是似乎也没有战胜自己的懒惰。学期内总感觉学业繁重，忙活完课内学习似乎不再有精力探索个人博客的搭建；放假之后又打不起学习的劲头。本学期看了一鸣哥的博客之后感触颇深，现在又是暑期学校（要保持学习的状态却又不像学期当中那么忙），值此机会就开始了个人博客的搭建之旅。</p><p>​        创建个人博客的原因如上所述有学习、生活两方面，因此关于博客的开放性也有两种态度。于生活的角度，想记录自己的心里的各种想法和生活点滴，以我的性格自然是不希望有过多的人看到，更希望这是我自己的一片小天地；于学习的角度，作为程序猿，我认为应该有开源的观念，学习的技术应该分享给大家，同时以后参加面试，个人技术博客自然是要给”老板“看的，这又必须保持博客的开放性。多少纠结了一段时间。</p><p>​        最后想到了两全的解决方案，这个博客作为个人的隐私空间，学习和生活中的内容都在此记录，再把学习帖copy到其他博客网站上即可，两全其美。</p><p>​        所以，我的朋友，你能来到我的小天地，实在说明我很信任你，愿意向你敞开胸怀。</p><p>​        等我正式建立起了我的学习博客，再把地址放在这里吧。</p><p>​        希望博客的搭建能促使我的生活更加规律、向上吧。</p><p>​        <strong>欢迎常来！</strong></p>]]></content>
    
    
    <summary type="html">开通博客的一些想法</summary>
    
    
    
    <category term="漫无目的的思考" scheme="http://yangyy.top/categories/%E6%BC%AB%E6%97%A0%E7%9B%AE%E7%9A%84%E7%9A%84%E6%80%9D%E8%80%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yangyy.top/2022/07/14/hello-world/"/>
    <id>http://yangyy.top/2022/07/14/hello-world/</id>
    <published>2022-07-14T03:07:28.789Z</published>
    <updated>2022-07-16T07:57:55.304Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Hexo使用简介</summary>
    
    
    
    <category term="技术" scheme="http://yangyy.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://yangyy.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
